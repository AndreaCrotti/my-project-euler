#+OPTIONS: todo:nil author:t toc:nil num:nil
#+AUTHOR: Andrea Crotti
#+STARTUP: align showall
# Time-stamp: <25-03-2011, 11:08>

Euler PROJECT solutions

* TODO Scraping on the web page, analyzing the source code and recreating a table.
* TODO Automatic loading of elisp functions on load
* TODO Insert automatic testing of results, with HUnit/nose
* TODO Use sessions and delete the ugly huge table

* [[http://projecteuler.net/index.php%3Fsection%3Dproblems&id%3D1][Problem 1]]
  If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
  Find the sum of all the multiples of 3 or 5 below 1000.
  
#+begin_src python
# OR is short circuiting, putting n % 3 before n % 5 can already
# greatly reduce the number of calls
# Using directly a generator instead of list comprehension is always a good thing
return sum(n for n in xrange(1000) if (n % 3 == 0 or n % 5 == 0))    
#+end_src

#+results:
: 233168

* [[http://projecteuler.net/index.php%3Fsection%3Dproblems&id%3D2][Problem 2]]

#+begin_src python
# Find the sum of all the even-valued terms in the Fibonacci sequence which do not exceed four million.

# need a dynamic programming approach, using only one two cells array
 
def sum_fib(n):
    "sum up even fibonacci numbers until max"
    tot = 0
    tup = [1, 1]
    while True:
        tup[0], tup[1] = sum(tup), tup[0]
        if tup[0] > n:
            return tot
        if tup[0] % 2 == 0:
            tot += tup[0]
            
return sum_fib(4000000)

#+end_src

#+results:
: 4613732

#+begin_src haskell
module Main where

import Utils (fib)

main = do
  print $ head $ filter (\x -> (length $ show $ fib x) == 1000) [0..]
#+end_src

* [[http://projecteuler.net/index.php%3Fsection%3Dproblems&id%3D79][Problem 79]]
  A common security method used for online banking is to ask the user
  for three random characters from a passcode. For example, if the
  passcode was 531278, they may asked for the 2nd, 3rd, and 5th
  characters; the expected reply would be: 317.

  The text file, keylog.txt, contains fifty successful login attempts.
  
  Given that the three characters are always asked for in order, analyse the file so as to determine the shortest possible secret passcode of unknown length.
  

* Problems

 |  ID | DESCRIPTION                                        | PY | HS | RB | C | CPP | NB |       RESULT | SUBMITTED |
 |-----+----------------------------------------------------+----+----+----+---+-----+----+--------------+-----------|
 |     | <50>                                               | [[elisp:(find-file "temp/prob_.py")][_]]  | [[elisp:(find-file "temp/prob_.hs")][_]]  | [[elisp:(find-file "temp/prob_.rb")][_]]  | [[elisp:(find-file "temp/prob_.c")][_]] | [[elisp:(find-file "temp/prob_.cpp")][_]]   | [[elisp:(find-file "temp/prob_.nb")][_]]  |              | N         |
 |-----+----------------------------------------------------+----+----+----+---+-----+----+--------------+-----------|
 |   1 | Add all the natural numbers below one thousand that are multiples of 3 or 5 | [[file:prob_1/prob_1.py][X]]  | [[file:prob_1/prob_1.hs][X]]  | [[elisp:(find-file "temp/prob_1.rb")][_]]  | [[elisp:(find-file "temp/prob_1.c")][_]] | [[elisp:(find-file "temp/prob_1.cpp")][_]]   | [[elisp:(find-file "temp/prob_1.nb")][_]]  |       233168 | Y         |
 |   2 | Find the sum of all the even-valued terms in the Fibonacci sequence which do not exceed four million. | [[file:prob_2/prob_2.py][X]]  | [[file:prob_2/prob_2.hs][X]]  | [[elisp:(find-file "temp/prob_2.rb")][_]]  | [[elisp:(find-file "temp/prob_2.c")][_]] | [[elisp:(find-file "temp/prob_2.cpp")][_]]   | [[elisp:(find-file "temp/prob_2.nb")][_]]  |      4613732 | Y         |
 |   3 | What is the largest prime factor of the number 600851475143 ? | [[elisp:(find-file "temp/prob_3.py")][_]]  | [[file:prob_3/prob_3.hs][X]]  | [[elisp:(find-file "temp/prob_3.rb")][_]]  | [[elisp:(find-file "temp/prob_3.c")][_]] | [[elisp:(find-file "temp/prob_3.cpp")][_]]   | [[elisp:(find-file "temp/prob_3.nb")][_]]  |         6857 | Y         |
 |   4 | Find largest palindrome made from the product of two 3-digit numbers | [[file:prob_4/prob_4.py][X]]  | [[file:prob_4/prob_4.hs][X]]  | [[elisp:(find-file "temp/prob_4.rb")][_]]  | [[elisp:(find-file "temp/prob_4.c")][_]] | [[elisp:(find-file "temp/prob_4.cpp")][_]]   | [[elisp:(find-file "temp/prob_4.nb")][_]]  |       906609 | Y         |
 |   5 | smallest divisible by 1..20                        | [[file:prob_5/prob_5.py][X]]  | [[file:prob_5/prob_5.hs][X]]  | [[elisp:(find-file "temp/prob_5.rb")][_]]  | [[elisp:(find-file "temp/prob_5.c")][_]] | [[elisp:(find-file "temp/prob_5.cpp")][_]]   | [[elisp:(find-file "temp/prob_5.nb")][_]]  |    232792560 | Y         |
 |   6 | Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum | [[file:prob_6/prob_6.py][X]]  | [[file:prob_6/prob_6.hs][X]]  | [[elisp:(find-file "temp/prob_6.rb")][_]]  | [[elisp:(find-file "temp/prob_6.c")][_]] | [[elisp:(find-file "temp/prob_6.cpp")][_]]   | [[elisp:(find-file "temp/prob_6.nb")][_]]  |     25164150 | Y         |
 |   7 | What is the 10001^{st} prime number                | [[file:prob_7/prob_7.py][X]]  | [[file:prob_7/prob_7.hs][X]]  | [[file:prob_7/prob_7.rb][X]]  | [[elisp:(find-file "temp/prob_7.c")][_]] | [[elisp:(find-file "temp/prob_7.cpp")][_]]   | [[elisp:(find-file "temp/prob_7.nb")][_]]  |       104743 | Y         |
 |   8 | Find the greatest product of five consecutive digits in the 1000-digit number. | [[file:prob_8/prob_8.py][X]]  | [[file:prob_8/prob_8.hs][X]]  | [[elisp:(find-file "temp/prob_8.rb")][_]]  | [[elisp:(find-file "temp/prob_8.c")][_]] | [[elisp:(find-file "temp/prob_8.cpp")][_]]   | [[elisp:(find-file "temp/prob_8.nb")][_]]  |        40824 | Y         |
 |   9 | find only Pythagorean triplet for which $a + b + c = 1000$, where $a^2+b^2=c^2$ | [[file:prob_9/prob_9.py][X]]  | [[file:prob_9/prob_9.hs][X]]  | [[elisp:(find-file "temp/prob_9.rb")][_]]  | [[elisp:(find-file "temp/prob_9.c")][_]] | [[elisp:(find-file "temp/prob_9.cpp")][_]]   | [[elisp:(find-file "temp/prob_9.nb")][_]]  |     31875000 | Y         |
 |  10 | Calculate the sum of all the primes below two million. | [[elisp:(find-file "temp/prob_10.py")][_]]  | [[file:prob_10/prob_10.hs][X]]  | [[elisp:(find-file "temp/prob_10.rb")][_]]  | [[elisp:(find-file "temp/prob_10.c")][_]] | [[elisp:(find-file "temp/prob_10.cpp")][_]]   | [[elisp:(find-file "temp/prob_10.nb")][_]]  | 142913828922 | Y         |
 |  11 | biggest product of 4 digits in matrix              | [[file:temp/prob_11.py][?]]  | [[file:temp/prob_11.hs][?]]  | [[elisp:(find-file "temp/prob_11.rb")][_]]  | [[elisp:(find-file "temp/prob_11.c")][_]] | [[elisp:(find-file "temp/prob_11.cpp")][_]]   | [[elisp:(find-file "temp/prob_11.nb")][_]]  |              | N         |
 |  12 | What is the value of the first triangle number to have over five hundred divisors? | [[file:prob_12/prob_12.py][X]]  | [[file:prob_12/prob_12.hs][X]]  | [[file:prob_12/prob_12.rb][X]]  | [[elisp:(find-file "temp/prob_12.c")][_]] | [[elisp:(find-file "temp/prob_12.cpp")][_]]   | [[elisp:(find-file "temp/prob_12.nb")][_]]  |     76576500 | Y         |
 |  13 | Work out the first ten digits of the sum of the following one-hundred 50-digit numbers. | [[elisp:(find-file "temp/prob_13.py")][_]]  | [[file:prob_13/prob_13.hs][X]]  | [[elisp:(find-file "temp/prob_13.rb")][_]]  | [[elisp:(find-file "temp/prob_13.c")][_]] | [[elisp:(find-file "temp/prob_13.cpp")][_]]   | [[elisp:(find-file "temp/prob_13.nb")][_]]  |   5537376230 | Y         |
 |  14 | Find the longest sequence using a starting number under one million. | [[file:prob_14/prob_14.py][X]]  | [[file:temp/prob_14.hs][?]]  | [[elisp:(find-file "temp/prob_14.rb")][_]]  | [[file:prob_14/prob_14.c][X]] | [[elisp:(find-file "temp/prob_14.cpp")][_]]   | [[elisp:(find-file "temp/prob_14.nb")][_]]  |       837799 | Y         |
 |  15 | (Just binomial 40 20)                              | [[file:prob_15/prob_15.py][X]]  | [[file:prob_15/prob_15.hs][X]]  | [[elisp:(find-file "temp/prob_15.rb")][_]]  | [[elisp:(find-file "temp/prob_15.c")][_]] | [[elisp:(find-file "temp/prob_15.cpp")][_]]   | [[elisp:(find-file "temp/prob_15.nb")][_]]  | 137846528820 | Y         |
 |  16 | What is the sum of the digits of the number 21000? | [[elisp:(find-file "temp/prob_16.py")][_]]  | [[file:prob_16/prob_16.hs][X]]  | [[elisp:(find-file "temp/prob_16.rb")][_]]  | [[elisp:(find-file "temp/prob_16.c")][_]] | [[elisp:(find-file "temp/prob_16.cpp")][_]]   | [[elisp:(find-file "temp/prob_16.nb")][_]]  |         1366 | Y         |
 |  17 | If all the numbers from 1 to 1000 (one thousand) inclusive were written out in words, how many letters would be used? | [[file:prob_17/prob_17.py][X]]  | [[file:prob_17/prob_17.hs][X]]  | [[elisp:(find-file "temp/prob_17.rb")][_]]  | [[elisp:(find-file "temp/prob_17.c")][_]] | [[elisp:(find-file "temp/prob_17.cpp")][_]]   | [[elisp:(find-file "temp/prob_17.nb")][_]]  |        21124 | Y         |
 |  18 | Find the maximum total from top to bottom of the triangle below: | [[file:temp/prob_18.py][?]]  | [[file:temp/prob_18.hs][?]]  | [[elisp:(find-file "temp/prob_18.rb")][_]]  | [[elisp:(find-file "temp/prob_18.c")][_]] | [[elisp:(find-file "temp/prob_18.cpp")][_]]   | [[elisp:(find-file "temp/prob_18.nb")][_]]  |              | N         |
 |  19 | How many Sundays fell on the first of the month during the twentieth century (1 Jan 1901 to 31 Dec 2000)? | [[file:prob_19/prob_19.py][X]]  | [[file:temp/prob_19.hs][?]]  | [[elisp:(find-file "temp/prob_19.rb")][_]]  | [[elisp:(find-file "temp/prob_19.c")][_]] | [[elisp:(find-file "temp/prob_19.cpp")][_]]   | [[elisp:(find-file "temp/prob_19.nb")][_]]  |          171 | Y         |
 |  20 | find sum of digits of 100!                         | [[file:prob_20/prob_20.py][X]]  | [[file:prob_20/prob_20.hs][X]]  | [[elisp:(find-file "temp/prob_20.rb")][_]]  | [[elisp:(find-file "temp/prob_20.c")][_]] | [[elisp:(find-file "temp/prob_20.cpp")][_]]   | [[elisp:(find-file "temp/prob_20.nb")][_]]  |          648 | Y         |
 |  21 | Evaluate the sum of all amicable pairs under 10000. | [[file:prob_21/prob_21.py][X]]  | [[elisp:(find-file "temp/prob_21.hs")][_]]  | [[elisp:(find-file "temp/prob_21.rb")][_]]  | [[elisp:(find-file "temp/prob_21.c")][_]] | [[elisp:(find-file "temp/prob_21.cpp")][_]]   | [[elisp:(find-file "temp/prob_21.nb")][_]]  |        31626 | Y         |
 |  22 | What is the total of all the name scores in the file of first names? | [[file:prob_22/prob_22.py][X]]  | [[elisp:(find-file "temp/prob_22.hs")][_]]  | [[elisp:(find-file "temp/prob_22.rb")][_]]  | [[elisp:(find-file "temp/prob_22.c")][_]] | [[elisp:(find-file "temp/prob_22.cpp")][_]]   | [[elisp:(find-file "temp/prob_22.nb")][_]]  |    871198282 | Y         |
 |  23 | Find the sum of all the positive integers which cannot be written as the sum of two abundant numbers. | [[file:prob_23/prob_23.py][X]]  | [[file:temp/prob_23.hs][?]]  | [[elisp:(find-file "temp/prob_23.rb")][_]]  | [[elisp:(find-file "temp/prob_23.c")][_]] | [[elisp:(find-file "temp/prob_23.cpp")][_]]   | [[file:temp/prob_23.nb][?]]  |      4179871 | Y         |
 |  24 | What is the millionth lexicographic permutation of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8 and 9? | [[file:prob_24/prob_24.py][X]]  | [[elisp:(find-file "temp/prob_24.hs")][_]]  | [[elisp:(find-file "temp/prob_24.rb")][_]]  | [[elisp:(find-file "temp/prob_24.c")][_]] | [[elisp:(find-file "temp/prob_24.cpp")][_]]   | [[file:prob_24/prob_24.nb][X]]  |   2783915460 | Y         |
 |  25 | What is the first term in the Fibonacci sequence to contain 1000 digits? | [[file:prob_25/prob_25.py][X]]  | [[file:temp/prob_25.hs][?]]  | [[elisp:(find-file "temp/prob_25.rb")][_]]  | [[elisp:(find-file "temp/prob_25.c")][_]] | [[elisp:(find-file "temp/prob_25.cpp")][_]]   | [[elisp:(find-file "temp/prob_25.nb")][_]]  |         4872 | Y         |
 |  26 | Find the value of d  1000 for which 1/d contains the longest recurring cycle in its decimal fraction part. | [[file:temp/prob_26.py][?]]  | [[elisp:(find-file "temp/prob_26.hs")][_]]  | [[elisp:(find-file "temp/prob_26.rb")][_]]  | [[elisp:(find-file "temp/prob_26.c")][_]] | [[elisp:(find-file "temp/prob_26.cpp")][_]]   | [[elisp:(find-file "temp/prob_26.nb")][_]]  |              | N         |
 |  28 | What is the sum of the numbers on the diagonals in a 1001 by 1001 spiral formed in the same way? | [[file:prob_28/prob_28.py][X]]  | [[elisp:(find-file "temp/prob_28.hs")][_]]  | [[elisp:(find-file "temp/prob_28.rb")][_]]  | [[elisp:(find-file "temp/prob_28.c")][_]] | [[elisp:(find-file "temp/prob_28.cpp")][_]]   | [[elisp:(find-file "temp/prob_28.nb")][_]]  |    669171001 | Y         |
 |  29 | How many distinct terms are in the sequence generated by ab for 2  a  100 and 2  b  100? | [[file:prob_29/prob_29.py][X]]  | [[elisp:(find-file "temp/prob_29.hs")][_]]  | [[elisp:(find-file "temp/prob_29.rb")][_]]  | [[elisp:(find-file "temp/prob_29.c")][_]] | [[elisp:(find-file "temp/prob_29.cpp")][_]]   | [[elisp:(find-file "temp/prob_29.nb")][_]]  |         9183 | Y         |
 |  30 | Find the sum of all the numbers that can be written as the sum of fifth powers of their digits. | [[file:prob_30/prob_30.py][X]]  | [[elisp:(find-file "temp/prob_30.hs")][_]]  | [[elisp:(find-file "temp/prob_30.rb")][_]]  | [[elisp:(find-file "temp/prob_30.c")][_]] | [[elisp:(find-file "temp/prob_30.cpp")][_]]   | [[elisp:(find-file "temp/prob_30.nb")][_]]  |       443839 | Y         |
 |  33 | If the product of these four fractions is given in its lowest common terms, find the value of the denominator. | [[file:temp/prob_33.py][?]]  | [[file:temp/prob_33.hs][?]]  | [[elisp:(find-file "temp/prob_33.rb")][_]]  | [[elisp:(find-file "temp/prob_33.c")][_]] | [[elisp:(find-file "temp/prob_33.cpp")][_]]   | [[elisp:(find-file "temp/prob_33.nb")][_]]  |              | N         |
 |  34 | Find the sum of all numbers which are equal to the sum of the factorial of their digits. | [[file:prob_34/prob_34.py][X]]  | [[file:prob_34/prob_34.hs][X]]  | [[elisp:(find-file "temp/prob_34.rb")][_]]  | [[elisp:(find-file "temp/prob_34.c")][_]] | [[elisp:(find-file "temp/prob_34.cpp")][_]]   | [[elisp:(find-file "temp/prob_34.nb")][_]]  |        40730 | Y         |
 |  35 | How many circular primes are there below one million? | [[file:prob_35/prob_35.py][X]]  | [[elisp:(find-file "temp/prob_35.hs")][_]]  | [[elisp:(find-file "temp/prob_35.rb")][_]]  | [[elisp:(find-file "temp/prob_35.c")][_]] | [[elisp:(find-file "temp/prob_35.cpp")][_]]   | [[elisp:(find-file "temp/prob_35.nb")][_]]  |           55 | Y         |
 |  36 | Find the sum of all numbers, less than one million, which are palindromic in base 10 and base 2. | [[elisp:(find-file "temp/prob_36.py")][_]]  | [[file:prob_36/prob_36.hs][X]]  | [[elisp:(find-file "temp/prob_36.rb")][_]]  | [[elisp:(find-file "temp/prob_36.c")][_]] | [[elisp:(find-file "temp/prob_36.cpp")][_]]   | [[elisp:(find-file "temp/prob_36.nb")][_]]  |       872187 | Y         |
 |  37 | Find the sum of the only eleven primes that are both truncatable from left to right and right to left | [[file:prob_37/prob_37.py][X]]  | [[file:temp/prob_37.hs][?]]  | [[file:temp/prob_37.rb][?]]  | [[elisp:(find-file "temp/prob_37.c")][_]] | [[elisp:(find-file "temp/prob_37.cpp")][_]]   | [[elisp:(find-file "temp/prob_37.nb")][_]]  |       748317 | Y         |
 |  38 | What is the largest 1 to 9 pandigital 9-digit number that can be formed as the concatenated product of an integer with (1,2, ... , n) where n  1? | [[file:prob_38/prob_38.py][X]]  | [[elisp:(find-file "temp/prob_38.hs")][_]]  | [[elisp:(find-file "temp/prob_38.rb")][_]]  | [[elisp:(find-file "temp/prob_38.c")][_]] | [[elisp:(find-file "temp/prob_38.cpp")][_]]   | [[elisp:(find-file "temp/prob_38.nb")][_]]  |    918273645 | Y         |
 |  39 | For which value of p ≤ 1000, is the number of solutions maximised? | [[file:temp/prob_39.py][?]]  | [[file:temp/prob_39.hs][?]]  | [[elisp:(find-file "temp/prob_39.rb")][_]]  | [[elisp:(find-file "temp/prob_39.c")][_]] | [[elisp:(find-file "temp/prob_39.cpp")][_]]   | [[elisp:(find-file "temp/prob_39.nb")][_]]  |              | N         |
 |  40 | If dn represents the nth digit of the fractional part, find the value of the following expression. | [[file:temp/prob_40.py][?]]  | [[elisp:(find-file "temp/prob_40.hs")][_]]  | [[elisp:(find-file "temp/prob_40.rb")][_]]  | [[elisp:(find-file "temp/prob_40.c")][_]] | [[elisp:(find-file "temp/prob_40.cpp")][_]]   | [[elisp:(find-file "temp/prob_40.nb")][_]]  |              | N         |
 |  41 | What is the largest n-digit pandigital prime that exists? | [[file:prob_41/prob_41.py][X]]  | [[elisp:(find-file "temp/prob_41.hs")][_]]  | [[file:temp/prob_41.rb][?]]  | [[elisp:(find-file "temp/prob_41.c")][_]] | [[elisp:(find-file "temp/prob_41.cpp")][_]]   | [[elisp:(find-file "temp/prob_41.nb")][_]]  |      7652413 | Y         |
 |  42 | two-thousand common English words, how many are triangle words? | [[file:prob_42/prob_42.py][X]]  | [[elisp:(find-file "temp/prob_42.hs")][_]]  | [[elisp:(find-file "temp/prob_42.rb")][_]]  | [[elisp:(find-file "temp/prob_42.c")][_]] | [[elisp:(find-file "temp/prob_42.cpp")][_]]   | [[elisp:(find-file "temp/prob_42.nb")][_]]  |          162 | Y         |
 |  44 | Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference is pentagonal and D =Pk  Pj is minimised; what is the value of D? | [[file:prob_44/prob_44.py][X]]  | [[file:prob_44/prob_44.hs][X]]  | [[elisp:(find-file "temp/prob_44.rb")][_]]  | [[elisp:(find-file "temp/prob_44.c")][_]] | [[elisp:(find-file "temp/prob_44.cpp")][_]]   | [[elisp:(find-file "temp/prob_44.nb")][_]]  |      5482660 | Y         |
 |  48 |                                                    | [[elisp:(find-file "temp/prob_48.py")][_]]  | [[file:prob_48/prob_48.hs][X]]  | [[elisp:(find-file "temp/prob_48.rb")][_]]  | [[elisp:(find-file "temp/prob_48.c")][_]] | [[elisp:(find-file "temp/prob_48.cpp")][_]]   | [[elisp:(find-file "temp/prob_48.nb")][_]]  |   9110846700 | Y         |
 |  52 | Find the smallest positive integer, x, such that 2x, 3x, 4x, 5x, and 6x, contain the same digits. | [[file:prob_52/prob_52.py][X]]  | [[file:prob_52/prob_52.hs][X]]  | [[elisp:(find-file "temp/prob_52.rb")][_]]  | [[elisp:(find-file "temp/prob_52.c")][_]] | [[elisp:(find-file "temp/prob_52.cpp")][_]]   | [[elisp:(find-file "temp/prob_52.nb")][_]]  |       142857 | Y         |
 |  56 | Considering natural numbers of the form, ab, where a, b  100, what is the maximum digital sum? | [[file:prob_56/prob_56.py][X]]  | [[elisp:(find-file "temp/prob_56.hs")][_]]  | [[elisp:(find-file "temp/prob_56.rb")][_]]  | [[file:temp/prob_56.c][?]] | [[elisp:(find-file "temp/prob_56.cpp")][_]]   | [[elisp:(find-file "temp/prob_56.nb")][_]]  |          972 | Y         |
 |  55 | How many Lychrel numbers are there below ten-thousand? | [[file:prob_55/prob_55.py][X]]  | [[elisp:(find-file "temp/prob_55.hs")][_]]  | [[elisp:(find-file "temp/prob_55.rb")][_]]  | [[elisp:(find-file "temp/prob_55.c")][_]] | [[elisp:(find-file "temp/prob_55.cpp")][_]]   | [[elisp:(find-file "temp/prob_55.nb")][_]]  |          249 | Y         |
 |  92 | How many starting numbers below ten million will arrive at 89? | [[file:temp/prob_92.py][?]]  | [[elisp:(find-file "temp/prob_92.hs")][_]]  | [[elisp:(find-file "temp/prob_92.rb")][_]]  | [[file:prob_92/prob_92.c][X]] | [[elisp:(find-file "temp/prob_92.cpp")][_]]   | [[elisp:(find-file "temp/prob_92.nb")][_]]  |      8581146 | Y         |
 |  59 | Your task has been made easy, as the encryption key consists of three lower case characters. Using cipher1.txt (right click and 'Save Link/Target As...'), a file containing the encrypted ASCII codes, and the knowledge that the plain text must contain common English words, decrypt the message and find the sum of the ASCII values in the original text. | [[file:temp/prob_59.py][?]]  | [[elisp:(find-file "temp/prob_59.hs")][_]]  | [[elisp:(find-file "temp/prob_59.rb")][_]]  | [[elisp:(find-file "temp/prob_59.c")][_]] | [[elisp:(find-file "temp/prob_59.cpp")][_]]   | [[elisp:(find-file "temp/prob_59.nb")][_]]  |              | N         |
 |  53 | How many, not necessarily distinct, values of  nCr, for 1  n  100, are greater than one-million? | [[file:temp/prob_53.py][?]]  | [[elisp:(find-file "temp/prob_53.hs")][_]]  | [[elisp:(find-file "temp/prob_53.rb")][_]]  | [[file:temp/prob_53.c][?]] | [[elisp:(find-file "temp/prob_53.cpp")][_]]   | [[file:prob_53/prob_53.nb][X]]  |              | N         |
 |  32 | Find the sum of all products whose multiplicand/multiplier/product identity can be written as a 1 through 9 pandigital. | [[file:temp/prob_32.py][?]]  | [[elisp:(find-file "temp/prob_32.hs")][_]]  | [[elisp:(find-file "temp/prob_32.rb")][_]]  | [[elisp:(find-file "temp/prob_32.c")][_]] | [[elisp:(find-file "temp/prob_32.cpp")][_]]   | [[elisp:(find-file "temp/prob_32.nb")][_]]  |              | N         |
 |  99 | determine which line number has the greatest numerical value. | [[file:prob_99/prob_99.py][X]]  | [[elisp:(find-file "temp/prob_99.hs")][_]]  | [[elisp:(find-file "temp/prob_99.rb")][_]]  | [[elisp:(find-file "temp/prob_99.c")][_]] | [[elisp:(find-file "temp/prob_99.cpp")][_]]   | [[elisp:(find-file "temp/prob_99.nb")][_]]  |          709 | Y         |
 |  54 | How many hands the player 1 wins?                  | [[elisp:(find-file "temp/prob_54.py")][_]]  | [[elisp:(find-file "temp/prob_54.hs")][_]]  | [[elisp:(find-file "temp/prob_54.rb")][_]]  | [[elisp:(find-file "temp/prob_54.c")][_]] | [[elisp:(find-file "temp/prob_54.cpp")][_]]   | [[elisp:(find-file "temp/prob_54.nb")][_]]  |              | N         |
 |-----+----------------------------------------------------+----+----+----+---+-----+----+--------------+-----------|
 | TOT |                                                    | [[elisp:(find-file "temp/prob_TOT.py")][_]]  | [[elisp:(find-file "temp/prob_TOT.hs")][_]]  | [[elisp:(find-file "temp/prob_TOT.rb")][_]]  | [[elisp:(find-file "temp/prob_TOT.c")][_]] | [[elisp:(find-file "temp/prob_TOT.cpp")][_]]   | [[elisp:(find-file "temp/prob_TOT.nb")][_]]  |              | N         |

#+TBLFM: $3='(check-problem $1 @1)::$4='(check-problem $1 @1)::$5='(check-problem $1 @1)::$6='(check-problem $1 @1)::$7='(check-problem $1 @1)::$8='(check-problem $1 @1)::$10='(if (string-match $9 "") "N" "Y")
# I can do even better taking the extension form the header of the table

* Useful documentation
** Haskell
   - [[http://www.haskell.org/haskellwiki/Memoization][Memoization]]
   - [[http://www.haskell.org/haskellwiki/Euler_problems][euler problems solutions in haskell]]
     
